import { InlineMath, BlockMath } from 'react-katex';
import styles from '../index.module.css';

export default function SolveSteps({ steps }: { steps: { desc: string, code: string }[] }) {
    let d = {};
    let newSteps: string[] = [];
    steps.forEach(step => {
        const code = step.code;
        // run code to generate variable values
        eval(code); // if this was production, I might sandbox this but not worth the effort now
        // Go through each step and replace their variables with the values generated by the code
        newSteps.push(step.desc.replace(/\/\/(\w+)\/\//g, (match, name) => {
            return d[name] || match;
        }));
    });

    return (
        <div>{
            newSteps.map((step, index) => (
                <div key={index} className={styles.step}>
                    <span>{index})</span>
                    <span>
                        {step.split('$$').map((part, index) => {
                            if (index % 2 === 0) {
                                return <span key={index}>{part}</span>;
                            } else {
                                return <BlockMath key={index}>{part}</BlockMath >;
                            }
                        })}
                    </span>
                </div>
            ))
        }
        </div>
    )
}
